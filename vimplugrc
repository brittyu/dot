if has('nvim')
    if empty(glob('~/.local/share/nvim/site/autoload/plug.vim'))
      silent !curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
    endif
else
    if empty(glob('~/.vim/autoload/plug.vim'))
      silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
    endif
endif

call plug#begin('~/.vim/plugged')
Plug 'mattn/emmet-vim', { 'for': ['html', 'javascript'] }
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'othree/html5.vim', { 'for': 'html' }
Plug 'easymotion/vim-easymotion'
Plug 'scrooloose/nerdcommenter'
Plug 'editorconfig/editorconfig-vim'
Plug 'fatih/vim-go', { 'for': 'go' }
Plug 'ctrlpvim/ctrlp.vim'
Plug 'elzr/vim-json', { 'for': 'json' }
Plug 'rking/ag.vim'
Plug 'AndrewRadev/splitjoin.vim'
Plug 'sjl/badwolf'
Plug 'FooSoft/vim-argwrap'
Plug 'mxw/vim-jsx'
Plug 'flowtype/vim-flow'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'w0rp/ale'
Plug 'pangloss/vim-javascript'
Plug 'leafgarland/typescript-vim'
Plug 'cespare/vim-toml'
Plug 'Vimjas/vim-python-pep8-indent'
Plug 'rakr/vim-one'
Plug 'NLKNguyen/papercolor-theme'
Plug 'nsf/gocode', { 'rtp': 'vim', 'do': '~/.vim/plugged/gocode/vim/symlink.sh' }
call plug#end()

"------------------------------------------------------------------------------
" plugin settings
"------------------------------------------------------------------------------
let g:user_emmet_settings = {
    \  'html' : {
    \       'indentation' : '  '
    \   },
    \}

let g:ag_working_path_mode="r"
let g:ctrlp_max_files=0
let g:ctrlp_custom_ignore = {
    \ 'dir': '\v[\/](\.git|\.hg|\.svn|node_modules|venv)$',
    \ 'file': '\v\.(class)$',
    \ }

let NERDTreeIgnore=['\~$', 'dist', 'egg-info$', '__pycache__', '\.pyc$']

let g:go_fmt_command = "goimports"
let g:flow#autoclose=1

let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_enter = 0
let g:ale_linters = {
    \   'go': ['gofmt', 'goimports', 'go vet'],
    \   'proto': [],
    \}
